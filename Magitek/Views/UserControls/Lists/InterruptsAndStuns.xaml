<UserControl x:Class="Magitek.Views.UserControls.Lists.InterruptsAndStuns"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Magitek.Views.UserControls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModels="clr-namespace:Magitek.ViewModels"
             d:DesignHeight="300"
             d:DesignWidth="300"
             mc:Ignorable="d">

    <UserControl.DataContext>
        <Binding Source="{x:Static viewModels:InterruptsAndStuns.Instance}" />
    </UserControl.DataContext>

    <UserControl.Resources>
        <ResourceDictionary Source="/Magitek;component/Styles/Magitek.xaml" />
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="285" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <!--  left column  -->
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <ListBox Grid.Row="1" VerticalAlignment="Stretch" ItemsSource="{Binding Instance.ActionList}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Style="{DynamicResource ListboxNoBorderSearch}">
                <ListBox.Resources>
                    <ContextMenu x:Key="ActionsListContextMenu">
                        <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}, Path=DataContext.Instance.Remove}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}, Path=SelectedValue}" Header="Remove" />
                    </ContextMenu>
                </ListBox.Resources>
                <ListBox.ItemContainerStyle>
                    <Style BasedOn="{StaticResource ListBoxItemSearch}" TargetType="ListBoxItem">
                        <Setter Property="ContextMenu" Value="{StaticResource ActionsListContextMenu}" />
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="25" />
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="110" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!--<Border Grid.Column="0" Background="{DynamicResource Black20}" CornerRadius="5">
                                <Image Height="20" VerticalAlignment="Center" Source="{Binding IconUrl}" Stretch="Uniform" />
                            </Border>-->

                            <TextBlock Grid.Column="1"
                                       Margin="2,0"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="10"
                                       Foreground="White"
                                       Text="{Binding Id}" />
                            <TextBlock Grid.Column="2" VerticalAlignment="Center" FontSize="11" Foreground="White" Text="{Binding Name}" />

                            <StackPanel Grid.Column="3" Orientation="Horizontal">
                                <CheckBox Margin="0,0,2,0" IsChecked="{Binding HighPriority, Mode=TwoWay}" Style="{DynamicResource HighPriorityToggle}" ToolTip="High Priority" />
                                <CheckBox IsChecked="{Binding Interrupt, Mode=TwoWay}" Style="{DynamicResource InterruptToggle}" ToolTip="Interrupt" />
                                <CheckBox Margin="2,0" IsChecked="{Binding Stun, Mode=TwoWay}" Style="{DynamicResource StunToggle}" ToolTip="Stun" />

                                <ComboBox>
                                    <ComboBox.Style>
                                        <Style TargetType="{x:Type ComboBox}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ComboBox}">

                                                        <Border>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition />
                                                                    <ColumnDefinition Width="Auto" />
                                                                </Grid.ColumnDefinitions>

                                                                <ContentPresenter Name="ContentSite"
                                                                                  Grid.Column="0"
                                                                                  HorizontalAlignment="Left"
                                                                                  VerticalAlignment="Center"
                                                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                                                  IsHitTestVisible="False" />


                                                                <Popup Name="Popup"
                                                                       Grid.Column="0"
                                                                       Grid.ColumnSpan="2"
                                                                       AllowsTransparency="True"
                                                                       Focusable="False"
                                                                       IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                                                       Placement="Bottom"
                                                                       PopupAnimation="Slide">
                                                                    <Grid Name="DropDown" SnapsToDevicePixels="True">
                                                                        <Border Name="DropDownBorder" Padding="1" Background="{DynamicResource ClassSelectorBackground}" CornerRadius="2" Opacity="0.98" />

                                                                        <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                                                        </ScrollViewer>
                                                                    </Grid>
                                                                </Popup>

                                                                <CheckBox Name="ToggleButton" Grid.Column="1" ClickMode="Press" Focusable="False" IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                                                    <CheckBox.Style>
                                                                        <Style TargetType="{x:Type CheckBox}">
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type CheckBox}">


                                                                                        <Border Name="Background"
                                                                                                Height="15"
                                                                                                Padding="3,0"
                                                                                                Background="{DynamicResource Info}"
                                                                                                CornerRadius="2"
                                                                                                IsHitTestVisible="True">

                                                                                            <Grid>
                                                                                                <Grid.ColumnDefinitions>
                                                                                                    <ColumnDefinition />
                                                                                                    <ColumnDefinition Width="Auto" />
                                                                                                </Grid.ColumnDefinitions>

                                                                                                <TextBlock HorizontalAlignment="Center"
                                                                                                           VerticalAlignment="Center"
                                                                                                           FontSize="9"
                                                                                                           FontWeight="Bold"
                                                                                                           Foreground="{DynamicResource ClassSelectorBackground}"
                                                                                                           Text="JOBS" />
                                                                                                <Path Name="Arrow"
                                                                                                      Grid.Column="1"
                                                                                                      Margin="2,1,0.5,0"
                                                                                                      HorizontalAlignment="Center"
                                                                                                      VerticalAlignment="Center"
                                                                                                      Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                                                                                                      Fill="{DynamicResource TabControlComboboxCheckForeground}"
                                                                                                      SnapsToDevicePixels="True" />
                                                                                            </Grid>

                                                                                        </Border>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </CheckBox.Style>
                                                                </CheckBox>

                                                            </Grid>
                                                        </Border>

                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                                                <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95" />
                                                            </Trigger>
                                                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                                                <Setter Property="TextElement.Foreground" Value="Gray" />
                                                            </Trigger>
                                                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                                                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                                            </Trigger>
                                                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />

                                                                <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>

                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ComboBox.Style>

                                    <CheckBox IsChecked="{Binding Scholar, Mode=TwoWay}" Style="{DynamicResource ScholarToggle}" />
                                    <CheckBox IsChecked="{Binding Paladin, Mode=TwoWay}" Style="{DynamicResource PaladinToggle}" />
                                    <CheckBox IsChecked="{Binding Warrior, Mode=TwoWay}" Style="{DynamicResource WarriorToggle}" />
                                    <CheckBox IsChecked="{Binding DarkKnight, Mode=TwoWay}" Style="{DynamicResource DarkKnightToggle}" />
                                    <CheckBox IsChecked="{Binding Bard, Mode=TwoWay}" Style="{DynamicResource BardToggle}" />
                                    <CheckBox IsChecked="{Binding Machinist, Mode=TwoWay}" Style="{DynamicResource MachinistToggle}" />
                                    <CheckBox IsChecked="{Binding Dragoon, Mode=TwoWay}" Style="{DynamicResource DragoonToggle}" />
                                    <CheckBox IsChecked="{Binding Monk, Mode=TwoWay}" Style="{DynamicResource MonkToggle}" />
                                    <CheckBox IsChecked="{Binding Ninja, Mode=TwoWay}" Style="{DynamicResource NinjaToggle}" />
                                    <CheckBox IsChecked="{Binding BlueMage, Mode=TwoWay}" Style="{DynamicResource BlueMageToggle}" />

                                </ComboBox>

                            </StackPanel>

                        </Grid>

                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

        </Grid>

        <!--  right column  -->
        <Border Grid.Column="1" Background="{DynamicResource ClassSelectorBackground}">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="25" />
                    <RowDefinition />
                </Grid.RowDefinitions>


                <!--  Search Bar  -->
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Path Grid.Column="0"
                          Width="12"
                          Height="12"
                          Data="M9.061606,18.911095C9.5626102,19.711102 10.162613,20.41211 10.862623,21.112111 11.563608,21.812111 12.263617,22.413111 13.064608,22.913115L4.2596264,31.718169C3.7586523,32.218171 2.357658,31.81816 1.2576572,30.718163 0.15664925,29.617159 -0.34334836,28.316144 0.25665479,27.716149z M20.868556,3.8020218C18.967564,3.8020218 17.166579,4.5030141 15.665578,5.9030309 12.86359,8.7050472 12.86359,13.40806 15.665578,16.209084 18.467566,19.011101 23.169541,19.011101 25.97153,16.209084 28.773518,13.308069 28.873522,8.7050472 25.97153,5.9030309 24.570534,4.5030141 22.769549,3.8020218 20.868556,3.8020218z M20.868556,0C23.670544,-1.196986E-08 26.571532,1.1010037 28.773518,3.2020128 33.075497,7.5040369 33.075497,14.608079 28.773518,18.911095 24.470528,23.21312 17.366589,23.21312 13.064608,18.911095 8.661614,14.608079 8.661614,7.604044 12.963595,3.2020128 15.16558,1.1010037 18.066567,-1.196986E-08 20.868556,0z"
                          Fill="#FF8C8B8B"
                          RenderTransformOrigin="0.5,0.5"
                          Stretch="Uniform" />

                    <TextBox Name="SearchAction"
                             Grid.Row="0"
                             Grid.Column="1"
                             VerticalAlignment="Center"
                             Background="Transparent"
                             BorderThickness="0"
                             FontSize="10"
                             Foreground="White">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter" Command="{Binding Instance.Search}" CommandParameter="{Binding ElementName=SearchAction, Path=Text}" />
                        </TextBox.InputBindings>
                        <TextBox.CaretBrush>
                            <SolidColorBrush Color="White" />
                        </TextBox.CaretBrush>
                    </TextBox>
                </Grid>

                <!--  Highlight below search bar  -->
                <Rectangle Grid.Row="0" Height="2" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Fill="{DynamicResource TabDivider}" />

                <!--  Search List box  -->
                <ListBox Name="SearchListBox"
                         Grid.Row="1"
                         Background="Transparent"
                         BorderThickness="0"
                         ItemsSource="{Binding Instance.SearchedActions}"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         Style="{DynamicResource ListboxNoBorderSearch}">
                    <ListBox.Resources>
                        <ContextMenu x:Key="DispelsSearchListContextMenu">
                            <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}, Path=DataContext.Instance.Add}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}, Path=SelectedValue}" Header="Add" />
                        </ContextMenu>
                    </ListBox.Resources>
                    <ListBox.ItemContainerStyle>
                        <Style BasedOn="{StaticResource ListBoxItemSearch}" TargetType="ListBoxItem">
                            <Setter Property="ContextMenu" Value="{StaticResource DispelsSearchListContextMenu}" />
                        </Style>
                    </ListBox.ItemContainerStyle>

                    <ListBox.ItemTemplate>
                        <DataTemplate>


                            <Grid IsHitTestVisible="True">
                                <Grid.InputBindings>
                                    <MouseBinding Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}, Path=DataContext.Instance.Add}" CommandParameter="{Binding ElementName=SearchListBox, Path=SelectedValue}" MouseAction="LeftDoubleClick" />
                                </Grid.InputBindings>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25" />
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <!--<Border Grid.Column="0" Background="{DynamicResource Black20}" CornerRadius="5">
                                    <Image Width="20" VerticalAlignment="Center" Source="{Binding IconUrl}" Stretch="Uniform" />
                                </Border>-->

                                <TextBlock Grid.Column="1"
                                           Margin="2,0"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontSize="10"
                                           Foreground="White"
                                           Text="{Binding Id}" />
                                <TextBlock Grid.Column="2" VerticalAlignment="Center" FontSize="10" Foreground="White" Text="{Binding Name}" />

                            </Grid>


                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>

        </Border>

        <!--  border on the left of listbox  -->
        <Rectangle Grid.Column="1" Width="2" HorizontalAlignment="Left">
            <Rectangle.Fill>
                <LinearGradientBrush StartPoint="0,1" EndPoint="1,1">
                    <GradientStop Offset="1" Color="Black" />
                    <GradientStop Color="#FF303030" />
                    <GradientStop Offset="0.496" Color="Black" />
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>

    </Grid>
</UserControl>

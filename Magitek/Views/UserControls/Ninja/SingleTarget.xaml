<UserControl x:Class="Magitek.Views.UserControls.Ninja.SingleTarget"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:Magitek.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModels="clr-namespace:Magitek.ViewModels"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:enums="clr-namespace:Magitek.Enumerations"
             d:DesignHeight="400"
             d:DesignWidth="500"
             mc:Ignorable="d">

    <UserControl.DataContext>
        <Binding Source="{x:Static viewModels:BaseSettings.Instance}" />
    </UserControl.DataContext>

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Magitek;component/Styles/Magitek.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <ObjectDataProvider x:Key="InterruptStrategy" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="enums:InterruptStrategy" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </ResourceDictionary>
    </UserControl.Resources>

    <StackPanel Margin="10">

        <controls:SettingsBlock Background="{DynamicResource ClassSelectorBackground}">
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <CheckBox Grid.Row="0" Content="Shadow Fang" IsChecked="{Binding NinjaSettings.UseShadowFang, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />


                <Grid Grid.Row="4">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0" Orientation="Horizontal">
                        <TextBlock Style="{DynamicResource TextBlockDefault}" Text=" Refresh When There Are " />
                        <controls:Numeric MaxValue="100" MinValue="1" Value="{Binding NinjaSettings.ShadowFangRefresh, Mode=TwoWay}" />
                        <TextBlock Style="{DynamicResource TextBlockDefault}" Text=" Seconds Left Of Damage Over Time" />
                    </StackPanel>

                    <StackPanel Grid.Row="1" Margin="0,3" Orientation="Horizontal">
                        <TextBlock Style="{DynamicResource TextBlockDefault}" Text=" Use Damage Over Time When The Enemy Has At Least " />
                        <controls:Numeric MaxValue="99999999" MinValue="1" Value="{Binding NinjaSettings.ShadowFangMinimumHealth, Mode=TwoWay}" />
                        <TextBlock Style="{DynamicResource TextBlockDefault}" Text=" Health" />
                    </StackPanel>

                    <StackPanel Grid.Row="2" Orientation="Horizontal">
                        <TextBlock Style="{DynamicResource TextBlockDefault}" Text=" And At Least " />
                        <controls:Numeric MaxValue="100" MinValue="1" Value="{Binding NinjaSettings.ShadowFangMinimumHealthPercent, Mode=TwoWay}" />
                        <TextBlock Style="{DynamicResource TextBlockDefault}" Text=" Health Percent" />
                    </StackPanel>
                </Grid>

            </Grid>
        </controls:SettingsBlock>

        <controls:SettingsBlock Margin="0,5" Background="{DynamicResource ClassSelectorBackground}">
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <CheckBox Grid.Column="0" Grid.ColumnSpan="5" Content="Use Time Till Death For Shadow Fang" IsChecked="{Binding NinjaSettings.ShadowFangUseTtd, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
                <TextBlock Grid.Row="1" Grid.Column="0" Style="{DynamicResource TextBlockDefault}" Text=" Do Not Use Damage Over Time Spells If Enemy Is Dying Within  " />
                <controls:Numeric Grid.Row="1" Grid.Column="1" MaxValue="100" MinValue="1" Value="{Binding NinjaSettings.ShadowFangMinimumTtd, Mode=TwoWay}" />
                <TextBlock Grid.Row="1" Grid.Column="4" Style="{DynamicResource TextBlockDefault}" Text=" Seconds" />
            </Grid>
        </controls:SettingsBlock>

        <controls:SettingsBlock Background="{DynamicResource ClassSelectorBackground}">
            <StackPanel Margin="5">
                <CheckBox Content="Mug" IsChecked="{Binding NinjaSettings.UseMug, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
            </StackPanel>
        </controls:SettingsBlock>

        <controls:SettingsBlock Margin="0,5" Background="{DynamicResource ClassSelectorBackground}">
            <StackPanel Margin="5">
                <CheckBox Content="Assassinate" IsChecked="{Binding NinjaSettings.UseAssassinate, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
            </StackPanel>
        </controls:SettingsBlock>

        <controls:SettingsBlock Margin="0,5" Background="{DynamicResource ClassSelectorBackground}">
            <StackPanel Margin="5">
                <CheckBox Content="Trick Attack" IsChecked="{Binding NinjaSettings.UseTrickAttack, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
            </StackPanel>
        </controls:SettingsBlock>

        <controls:SettingsBlock Background="{DynamicResource ClassSelectorBackground}">
            <StackPanel Margin="5">
                <CheckBox Content="Dream Within A Dream" IsChecked="{Binding NinjaSettings.UseDreamWithinADream, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
            </StackPanel>
        </controls:SettingsBlock>

        <controls:SettingsBlock Margin="0,5" Background="{DynamicResource ClassSelectorBackground}">
            <StackPanel Margin="5">
                <CheckBox Content="Bhavacakra" IsChecked="{Binding NinjaSettings.UseBhavacakra, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
            </StackPanel>
        </controls:SettingsBlock>

        <controls:SettingsBlock Margin="0,5" Background="{DynamicResource ClassSelectorBackground}">
            <StackPanel Margin="5">
                <CheckBox Content="Bunshin" IsChecked="{Binding NinjaSettings.UseBunshin, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
            </StackPanel>
        </controls:SettingsBlock>

        <controls:SettingsBlock Margin="0,5,0,0" Background="{DynamicResource ClassSelectorBackground}">
            <StackPanel Margin="5" Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" Margin="0,0,3,0" Style="{DynamicResource TextBlockDefault}" Text="Stun Strategy:" />
                <ComboBox Width="170" ItemsSource="{Binding Source={StaticResource InterruptStrategy}}" SelectedValue="{Binding NinjaSettings.Strategy, Mode=TwoWay}" Style="{DynamicResource ComboBox}" />
            </StackPanel>
        </controls:SettingsBlock>

    </StackPanel>
</UserControl>
